# This is a customised demo, more details at:
# https://docs.docker.com/ee/ucp/kubernetes/layer-7-routing/

---
# ------------------- default-backend Deployment ------------------- #
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: default-http-backend
  labels:
    app: default-http-backend
  namespace: ${namespace_public}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: default-http-backend
  template:
    metadata:
      labels:
        app: default-http-backend
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: docker/default    
    spec:
      terminationGracePeriodSeconds: 60
      containers:
      - name: default-http-backend
        # Any image is permissable as long as:
        # 1. It serves a 404 page at /
        # 2. It serves 200 on a /healthz endpoint
        image: gcr.io/google_containers/defaultbackend:1.4
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 5
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 10m
            memory: 20Mi
          requests:
            cpu: 10m
            memory: 20Mi
---
# ------------------- default-backend Service ------------------- #
apiVersion: v1
kind: Service
metadata:
  name: default-http-backend
  namespace: ${namespace_public}
  labels:
    app: default-http-backend
spec:
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: default-http-backend
---
# ------------------- nginx-config ConfigMap ------------------- #
kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-configuration
  namespace: ${namespace_public}
  labels:
    app: ingress-nginx
---
# ------------------- tcp-services ConfigMap ------------------- #
kind: ConfigMap
apiVersion: v1
metadata:
  name: tcp-services
  namespace: ${namespace_public}
---
# ------------------- udp-services ConfigMap ------------------- #
kind: ConfigMap
apiVersion: v1
metadata:
  name: udp-services
  namespace: ${namespace_public}
---
# ------------------- nginx-ingress-controller Deployment ------------------- #
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: nginx-ingress-controller
  namespace: ${namespace_public}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress-nginx
  template:
    metadata:
      labels:
        app: ingress-nginx
      annotations:
        prometheus.io/port: '10254'
        prometheus.io/scrape: 'true'
        seccomp.security.alpha.kubernetes.io/pod: docker/default   
    spec:
      initContainers:
      - command:
        - sh
        - -c
        - sysctl -w net.core.somaxconn=32768; sysctl -w net.ipv4.ip_local_port_range="1024 65535"
        image: alpine:3.6
        imagePullPolicy: IfNotPresent
        name: sysctl
        securityContext:
          privileged: true
      containers:
        - name: nginx-ingress-controller
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.17.1 # 0.19.0
          args:
            - /nginx-ingress-controller
            - --default-backend-service=${namespace_public}/default-http-backend
            - --configmap=${namespace_public}/nginx-configuration
            - --tcp-services-configmap=${namespace_public}/tcp-services
            - --udp-services-configmap=${namespace_public}/udp-services
            - --annotations-prefix=nginx.ingress.kubernetes.io
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
          - name: http
            containerPort: 80
          - name: https
            containerPort: 443
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
---
# ------------------- ingress-nginx Service ------------------- #
apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx
  namespace: ${namespace_public}
spec:
  type: NodePort
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
    nodePort: 32004
  - name: https
    port: 443
    targetPort: 443
    protocol: TCP
    nodePort: 32005
  selector:
    app: ingress-nginx